我们有几种不同的硬币，面值v1,v2....vn(单位是元)
如果我们要支付W元，求最少需要多少个硬币，
比如我们有3种不同的硬币，1元，3元，5元，
我们要支付9元，最少需要3个硬币，（3个3元的硬币)

我们现在先用回塑算法来解决，回塑算法的重点需要画出递归树
1,我们把问题分为多个阶段，每个阶段求解使用一种面值支付的最少支付张数?
比如，现在使用1元来支付9元，可以会为多个操作，
阶段1
1，全部使用1元来支付，支付9元，将需要9张
阶段二，使用1元与其他币结合
2，使用1元和3元来，支付9元，将需要我种不同，
   2.1），使用6张1元加1张3元
   2.2)，使用3张1元和3张1元
3，使用1元、5元来支付，将需要1张5元和4张1元

阶段3,在结合的的基础上，查能否与其他币结合
 在使用1元和3元和基础上，考察是否能和5元结合,如果支付超9元，则直接拒绝，当前则可以使用
 1张5元，1张3元，和1张的硬币来支付




